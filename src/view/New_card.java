/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import model.*;
import utility.*;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
//import model.user;

/**
 *
 * @author Ali
 */
public class New_card extends javax.swing.JPanel {

    /**
     * Creates new form New_card
     */
    
    
    
    
    private JPanel BottomPanel;
    private User loggedInUser;
//    private user newUser;
    public New_card(){
        
       
        initComponents();
}
    public New_card(JPanel BottomPanel) {
        this.BottomPanel= BottomPanel;
        initComponents();
        
          
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gobackbutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Card_Name_combobox = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cardNo_text_field = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(255, 255, 255));
        setToolTipText("");

        gobackbutton.setFont(new java.awt.Font("Annai MN", 0, 12)); // NOI18N
        gobackbutton.setForeground(new java.awt.Color(0, 102, 255));
        gobackbutton.setText("Go back");
        gobackbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gobackbuttonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Annai MN", 0, 18)); // NOI18N
        jLabel1.setText("Create A New Card:");

        jLabel2.setFont(new java.awt.Font("Annai MN", 0, 12)); // NOI18N
        jLabel2.setText("Card_Name:");

        Card_Name_combobox.setFont(new java.awt.Font("Annai MN", 0, 12)); // NOI18N
        Card_Name_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "StarBucks", "PC Optimum", "Tim Hortons", "Scene+" }));
        Card_Name_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Card_Name_comboboxActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Annai MN", 0, 12)); // NOI18N
        jLabel3.setText("Expiry Date:");

        jLabel4.setFont(new java.awt.Font("Annai MN", 0, 12)); // NOI18N
        jLabel4.setText("Card_No:");

        cardNo_text_field.setFont(new java.awt.Font("Annai MN", 0, 12)); // NOI18N
        cardNo_text_field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardNo_text_fieldActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 102, 255));
        jButton1.setFont(new java.awt.Font("Annai MN", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Submit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(gobackbutton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(224, 224, 224)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(274, 274, 274)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cardNo_text_field, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Card_Name_combobox, javax.swing.GroupLayout.Alignment.LEADING, 0, 200, Short.MAX_VALUE)))))
                .addContainerGap(296, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(gobackbutton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Card_Name_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cardNo_text_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 133, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void gobackbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gobackbuttonActionPerformed
        // TODO add your handling code here:
        Card_Panel newCard_Panel = new Card_Panel(BottomPanel);
        BottomPanel.add(newCard_Panel);
        CardLayout layout = (CardLayout) BottomPanel.getLayout();
        layout.next(BottomPanel);
    }//GEN-LAST:event_gobackbuttonActionPerformed

    private void Card_Name_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Card_Name_comboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Card_Name_comboboxActionPerformed

    private void cardNo_text_fieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardNo_text_fieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardNo_text_fieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                     if (isFormValid()) {
                         Date selectedDate = jDateChooser1.getDate();
                         SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
                         String dateString = dateFormat.format(selectedDate);

        
                         
//          user newUser = new user();
          String userInput = Card_Name_combobox.getSelectedItem().toString();
          
          String cardType = Card_Name_combobox.getSelectedItem().toString();
          int cardNo = Integer.parseInt(cardNo_text_field.getText());
          Date expiryDate = selectedDate;
          Card userCard = new Card();
          userCard.setCardNo(cardNo);
          userCard.setType(cardType);
          userCard.setPoints(200);
          userCard.setExpiry(expiryDate);
          userCard.setUID(1);
          
          DatabaseConnector.addCard(userCard);
          
//          if ("StarBucks".equals(userInput)){
//        newUser.setCard_Name_StarBucks(Card_Name_combobox.getSelectedItem().toString());
//        newUser.setCard_NO_starbucks(cardNo_text_field.getText());
//        newUser.setExpiry_Date_StarBucks(dateString);
//        Card_Panel newCard_Panel = new Card_Panel(newUser);
//        JOptionPane.showMessageDialog(this, "You New Card has been added", "Succesful", JOptionPane.PLAIN_MESSAGE);
//        BottomPanel.add(newCard_Panel);
//        CardLayout layout = (CardLayout) BottomPanel.getLayout();
//        layout.next(BottomPanel);
//          }
//          else if("TimHortons".equals(userInput)){
//        newUser.setCard_Name_tim(Card_Name_combobox.getSelectedItem().toString());
//        newUser.setCard_NO_tim(cardNo_text_field.getText());
//        newUser.setExpiry_Date_tim(dateString);
//        Card_Panel newCard_Panel1 = new Card_Panel(newUser);
//        JOptionPane.showMessageDialog(this, "You New Card has been added", "Succesful", JOptionPane.PLAIN_MESSAGE);
//        BottomPanel.add(newCard_Panel1);
//        CardLayout layout = (CardLayout) BottomPanel.getLayout();
//        layout.next(BottomPanel);
//          }
//          else if("PC optimum".equals(userInput)){
//                newUser.setCard_Name_Pcoptimum(Card_Name_combobox.getSelectedItem().toString());
//        newUser.setCard_NO_Pcoptimum(cardNo_text_field.getText());
//        newUser.setExpiry_Date_pcoptimum(dateString);
//        
//          }
        Card_Panel newCard_Panel1 = new Card_Panel(BottomPanel);
        JOptionPane.showMessageDialog(this, "You New Card has been added", "Succesful", JOptionPane.PLAIN_MESSAGE);
        BottomPanel.add(newCard_Panel1);
        CardLayout layout = (CardLayout) BottomPanel.getLayout();
        layout.next(BottomPanel);  
    }
                     
         else{
        JOptionPane.showMessageDialog(this, "Please fill in all required fields.", "Error", JOptionPane.ERROR_MESSAGE);
    }
        
    }                                             
private boolean isFormValid() {
    // Perform form validation, checking if any required fields are empty
    if (cardNo_text_field.getText().isEmpty() ||
        Card_Name_combobox.getSelectedItem() == null) {
        return false;
    }
    return true;
    
 
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Card_Name_combobox;
    private javax.swing.JTextField cardNo_text_field;
    private javax.swing.JButton gobackbutton;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
